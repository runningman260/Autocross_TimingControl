
networks:
  default:
    driver: bridge
    ipam:
      driver: default
  nextcloud:
    driver: bridge
    internal: true
    ipam:
      driver: default

# To get into the container and enter the mosquitto CLI:
# docker exec -it mosquitto sh
# To listen to all brokers:
# mosquitto_sub -v -p 1883 -t '#'
# Combine it all for one-and-done:
# docker exec -it mosquitto sh -c "mosquitto_sub -v -p 1883 -t '#'"
services:
  mosquitto:
    container_name: mosquitto
    build:
      context: ./.templates/mosquitto/.
      args:
      - MOSQUITTO_BASE=eclipse-mosquitto:latest
    restart: unless-stopped
    environment:
    - TZ=${TZ:-Etc/UTC}
    ports:
    - "1883:1883"
    volumes:
    - ./volumes/mosquitto/config:/mosquitto/config
    - ./volumes/mosquitto/data:/mosquitto/data
    - ./volumes/mosquitto/log:/mosquitto/log
    - ./volumes/mosquitto/pwfile:/mosquitto/pwfile

  # To get into the container and enter the postgres CLI:
  # docker exec -it postgres bash -c 'PGPASSWORD=$POSTGRES_PASSWORD psql $POSTGRES_DB $POSTGRES_USER'
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
      - ./volumes/postgres/db_backup:/backup

  unifi-db:
    image: docker.io/mongo:latest
    container_name: unifi-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - MONGO_AUTHSOURCE=${MONGO_AUTHSOURCE}
    volumes:
      - ./volumes/unifi-db/data:/data/db
      - ./volumes/unifi-db/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    restart: unless-stopped

  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=${MONGO_DBNAME}
      - MONGO_AUTHSOURCE=${MONGO_AUTHSOURCE}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
    volumes:
      - ./volumes/unifi-network-application/data:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: unless-stopped

  # Copy and Uncomment below for an additional python container
  #
  #python:
  #  container_name: python
  #  build: ./services/python/.
  #  restart: unless-stopped
  #  environment:
  #  - TZ=Etc/UTC
  #  - IOTSTACK_UID=1000
  #  - IOTSTACK_GID=1000
  #  devices:
  #  - /dev/polaris:/dev/polaris
  #  x-ports:
  #  - "external:internal"
  #  volumes:
  #  - ./volumes/python/app:/usr/src/app

  carregistrationlistener:
    container_name: carregistrationlistener
    build: ./services/carregistrationlistener/.
    restart: unless-stopped
    environment:
    - TZ=Etc/UTC
    - IOTSTACK_UID=1000
    - IOTSTACK_GID=1000
    - DOCKER_HOST_IP=172.17.0.1
    x-ports:
    - "external:internal"
    volumes:
    - ./volumes/carregistrationlistener/app:/usr/src/app

  scanlistener:
    container_name: scanlistener
    build: ./services/scanlistener/.
    restart: unless-stopped
    environment:
    - TZ=Etc/UTC
    - IOTSTACK_UID=1000
    - IOTSTACK_GID=1000
    - DOCKER_HOST_IP=172.17.0.1
    x-ports:
    - "external:internal"
    volumes:
    - ./volumes/scanlistener/app:/usr/src/app

  timingconsolereader:
    container_name: timingconsolereader
    build: ./services/timingconsolereader/.
    restart: unless-stopped
    environment:
    - TZ=Etc/UTC
    - IOTSTACK_UID=1000
    - IOTSTACK_GID=1000
    - DOCKER_HOST_IP=172.17.0.1
    devices:
    - /dev/polaris:/dev/polaris
    x-ports:
    - "external:internal"
    volumes:
    - ./volumes/timingconsolereader/app:/usr/src/app

# Uncomment when ready to make this work again
  timingcontrolwebui:
    container_name: timingcontrolwebui
    build: ./services/timingcontrolwebui/.
    env_file:
      - ./.env
    restart: unless-stopped
    environment:
    - TZ=Etc/UTC
    - IOTSTACK_UID=1000
    - IOTSTACK_GID=1000
    - DOCKER_HOST_IP=172.17.0.1
    ports:
    - 5000:5000

# Commented out to limit GoogleAPI interactions while re-working the repo
  #sheetupdater:
  #  container_name: sheetupdater
  #  build: ./services/sheetupdater/.
  #  restart: unless-stopped
  #  environment:
  #  - TZ=Etc/UTC
  #  - IOTSTACK_UID=1000
  #  - IOTSTACK_GID=1000
  #  - DOCKER_HOST_IP=172.17.0.1
  #  x-ports:
  #  - "external:internal"
  #  volumes:
  #  - ./volumes/sheetupdater/app:/usr/src/app
